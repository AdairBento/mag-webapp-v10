name: CI

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

permissions:
  actions: read
  contents: read
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: ${{ github.event_name != 'workflow_dispatch' }}

env:
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  COVERAGE_THRESHOLD: 80

jobs:
  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: api
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: npm
          cache-dependency-path: api/package-lock.json
      - run: npm ci --no-audit --no-fund
      - run: npm run lint

  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: [18.x, 20.x]
    name: Test (Node ${{ matrix.node }})
    defaults:
      run:
        working-directory: api
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: npm
          cache-dependency-path: api/package-lock.json
      - run: npm ci --no-audit --no-fund
      - run: npm run typecheck
      - name: Run tests with coverage
        env:
          VITEST_COVERAGE: 1
        run: npm test --silent -- --coverage --coverage.reporter=json --coverage.reporter=html --coverage.reporter=lcov
      - name: Upload coverage (lcov)
        if: ${{ always() && matrix.node == '20.x' }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage-lcov
          path: api/coverage/lcov.info
          if-no-files-found: ignore
          retention-days: 7
      - name: Upload coverage (html)
        if: ${{ always() && matrix.node == '20.x' }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: api/coverage
          if-no-files-found: ignore
          retention-days: 7

  publish-coverage:
    if: ${{ always() }}
    needs: test
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: coverage-html
          path: ./site
        continue-on-error: true
      - uses: actions/configure-pages@v5
      - id: upload
        if: ${{ hashFiles('site/**') != '' }}
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site
      - if: ${{ steps.upload.outcome == 'success' }}
        uses: actions/deploy-pages@v4
