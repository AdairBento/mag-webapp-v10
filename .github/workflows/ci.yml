name: CI

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: ${{ github.event_name != 'workflow_dispatch' }}

permissions:
  contents: read
  actions: read

jobs:
  lint:
    name: lint
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: npm
          cache-dependency-path: api/package-lock.json
      - name: Install dependencies
        working-directory: api
        run: npm ci --no-audit --no-fund
      - name: Run lint
        working-directory: api
        run: npm run lint

  test:
    name: Test (Node 20.x)
    runs-on: ubuntu-24.04
    env:
      VITEST_COVERAGE: "1"
      COVERAGE_THRESHOLD: "80"
      COVERAGE_INCLUDE: "http|middleware|utils"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: npm
          cache-dependency-path: api/package-lock.json
      - name: Install dependencies
        working-directory: api
        run: npm ci --no-audit --no-fund
      - name: Typecheck
        working-directory: api
        run: npm run typecheck
      - name: Clean previous coverage
        working-directory: api
        run: rm -rf coverage
      - name: Run tests with coverage (scoped)
        working-directory: api
        run: >
          npm test --silent --
          --coverage
          --coverage.reporter=json
          --coverage.reporter=html
          --coverage.reporter=lcov
          --coverage.reporter=json-summary
          --coverage.reportsDirectory=coverage
      - name: Show summary (non-blocking)
        if: always()
        working-directory: api
        run: |
          if [ -f "coverage/coverage-summary.json" ]; then
            node - <<'NODE'
            const fs = require('fs');
            const s = JSON.parse(fs.readFileSync('coverage/coverage-summary.json','utf8')).total;
            const md = [
              '### Cobertura total',
              `- Lines: ${s.lines.pct}% (${s.lines.covered}/${s.lines.total})`,
              `- Statements: ${s.statements.pct}% (${s.statements.covered}/${s.statements.total})`,
              `- Functions: ${s.functions.pct}% (${s.functions.covered}/${s.functions.total})`,
              `- Branches: ${s.branches.pct}% (${s.branches.covered}/${s.branches.total})`,
            ].join('\n');
            fs.writeFileSync(process.env.GITHUB_STEP_SUMMARY, md);
            NODE
          else
            echo "coverage-summary.json nÃ£o encontrado (ok se os testes falharam antes)."
          fi
      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: api/coverage
          if-no-files-found: warn