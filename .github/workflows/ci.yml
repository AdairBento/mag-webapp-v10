name: CI

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: ${{ github.event_name != 'workflow_dispatch' }}

permissions:
  contents: read
  actions: read
  pages: write
  id-token: write

jobs:
  lint:
    name: lint
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: npm
          cache-dependency-path: api/package-lock.json
      - name: Install dependencies
        working-directory: api
        run: npm ci --no-audit --no-fund
      - name: Run lint
        working-directory: api
        run: npm run lint

  test:
    name: Test (Node 20.x)
    runs-on: ubuntu-24.04
    env:
      VITEST_COVERAGE: 1
      COVERAGE_THRESHOLD: 80
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: npm
          cache-dependency-path: api/package-lock.json
      - name: Install dependencies
        working-directory: api
        run: npm ci --no-audit --no-fund
      - name: Typecheck
        working-directory: api
        run: npm run typecheck
      - name: Run tests with coverage
        working-directory: api
        run: npm test --silent -- --coverage --coverage.reporter=json --coverage.reporter=html --coverage.reporter=lcov
      - name: Upload coverage (lcov)
        uses: actions/upload-artifact@v4
        with:
          name: coverage-lcov
          path: api/coverage/lcov.info
          retention-days: 7
          if-no-files-found: ignore
      - name: Upload coverage (html)
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: api/coverage
          retention-days: 7
          if-no-files-found: ignore

  pages_check:
    name: Check GitHub Pages enabled
    runs-on: ubuntu-24.04
    outputs:
      enabled: ${{ steps.detect.outputs.enabled }}
    steps:
      - uses: actions/github-script@v7
        id: detect
        with:
          script: |
            try {
              await github.request('GET /repos/{owner}/{repo}/pages', {
                owner: context.repo.owner,
                repo: context.repo.repo
              });
              core.setOutput('enabled', 'true');
            } catch (e) {
              core.info(`GET /pages -> ${e.status || 'error'} (provavelmente Pages desabilitado)`);
              core.setOutput('enabled', 'false');
            }

  publish-coverage:
    name: publish-coverage
    needs: [test, pages_check]
    if: ${{ needs.pages_check.outputs.enabled == 'true' }}
    runs-on: ubuntu-24.04
    concurrency:
      group: pages
      cancel-in-progress: true
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
      actions: read
      contents: read
    steps:
      - name: Download coverage (html)
        uses: actions/download-artifact@v4
        with:
          name: coverage-html
          path: ./coverage
      - name: Setup GitHub Pages
        uses: actions/configure-pages@v5
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./coverage
      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v4